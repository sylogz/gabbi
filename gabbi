#!/usr/bin/env python2

from trace3 import Trace3
from csv2rep import Csv2Rep

import smtplib
from email.mime.text import MIMEText

import sys
import csv
import os


conffilemagic="format2"
conffile=os.path.expanduser('~/.gabbirc')
conf={
	'user' : "", 
	'pass' : "",
	'name' : "",
	'mail' : "",
}

quiet=False
while len(sys.argv) > 1:
	if sys.argv[1] == "-y":
		quiet=True
	elif sys.argv[1] == "-h":
		print ""
		print sys.argv[0] + " [-h|-y]"
		print ""
		print " -h  This help"
		print " -y  Only print report and assume correctly configured"
		print ""
		exit(1)
	else:
		print "Unknown option '"+sys.argv[1]+"'"
		exit(1)
	del sys.argv[1]


def info(string = '\n'):
	sys.stdout.write(string)
	sys.stdout.flush()

def log(string = '\n'):
	if quiet:
		return
	info(string)

with open(conffile, "rb") as f:
	r = f.readline()
	if r.strip() == conffilemagic:
		r = csv.reader(f, delimiter=',', quotechar='"')
	else:
		f.seek(0)
		r = [[row[0][1:], row[1]] for row in csv.reader(f, delimiter='=', quotechar='\'')]
	for row in r:
		conf[row[0]] = row[1] 

def ask(outp, cval, passwd=False):
	info(outp)
	if cval != "":
		if passwd:
			info("(" + "*" * len(cval) + ") :")
		else:
			info("(" + cval + ") :")
	else:
		info(":")
	v = sys.stdin.readline().strip()
	if v == '':
		return cval
	if v == '.':
		return ''
	return v

if not quiet:
	info()
	info("Current configuration:\n")
	info()
	for row in conf:
		info(" " + row.title() + " : ")
		if row.lower() == "pass":
			info("*" * len(conf[row]))
		else:
			info(conf[row])
		info("\n")

	info()
	info("Use this configuration (Y/n) :")
	ok=sys.stdin.readline().strip()

	if len(ok) != 0 and ok.lower()[0] != "y":
		info("Use dot (.) to clear configuration value, enter to keep and ^c to exit.\n")
		info()
		conf['name'] = ask("Your name", conf['name'])
		conf['user'] = ask("Trace3 User", conf['user'])
		conf['pass'] = ask("Trace3 Password", conf['pass'], True)
		conf['mail'] = ask("EMail to", conf['mail'])

		f = open(conffile, "w+")
		f.write(conffilemagic + "\r\n")
		w = csv.writer(f, delimiter=',', quotechar='"')
		for c in conf:
			w.writerow([c, conf[c]])
		f.close()

log()
log("Logging in to trace3 ... ")
t3 = Trace3(conf['user'], conf['pass'])
if not t3.login():
	raise "Could not login"
	exit(1)
log("Done\nGetting csv report ... ")
r = csv.reader(t3.getcsv(), delimiter=',', quotechar='"')
log("Done\nLogging out from trace3 ... ")
t3.logout()
log("Done\nGenerating report ... ")
try:
	ret = Csv2Rep(r)
except:
	print r
	raise
log("Done\n")

ret += "\n// " + conf['name']
log("---\n")
info()
info(ret)
info()
log("\n---\n")
if conf['mail'] != "":
	if not quiet:
		info("Send this as mail to "+conf['mail']+" with from and bcc " + conf['user'] + " (Y/n) :")
		v = sys.stdin.readline().strip()
		if v != "" and v.lower() != "y":
			exit(0)
	log("Sending mail ... ")
	msg = MIMEText("\n".join([ret, "", "// " + conf['name']]))
	msg['Subject'] = 'Task report on E///projects'
	msg['From'] = conf['user']
	msg['To'] = conf['mail']
	msg['Bcc'] = conf['user']
	s = smtplib.SMTP('localhost')
	s.sendmail(conf['user'], conf['mail'], msg.as_string())
	s.quit()
log("Done\n")
log()
